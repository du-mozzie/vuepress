(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{643:function(s,e,a){"use strict";a.r(e);var t=a(5),r=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[s._v("#")]),s._v(" 概述")]),s._v(" "),a("p",[s._v("REmote DIctionary Server(Redis) 是一个由 Salvatore Sanfilippo 写的 key-value 存储系统，是跨平台的非关系型数据库。")]),s._v(" "),a("p",[s._v("Redis 是一个开源的使用 ANSI C 语言编写、遵守 BSD 协议、支持网络、可基于内存、分布式、可选持久性的键值对(Key-Value)存储数据库，并提供多种语言的 API。")]),s._v(" "),a("p",[s._v("Redis 通常被称为数据结构服务器，因为值（value）可以是字符串(String)、哈希(Hash)、列表(list)、集合(sets)和有序集合(sorted sets)等类型。")]),s._v(" "),a("ol",[a("li",[s._v("Redis是一个"),a("code",[s._v("开源")]),s._v("的"),a("code",[s._v("key-value")]),s._v("存储系统")]),s._v(" "),a("li",[s._v("和Memcached类似，它支持存储的value类型相对更多,包括"),a("code",[s._v("string")]),s._v("(字符串)、"),a("code",[s._v("list")]),s._v("(链表)、"),a("code",[s._v("set")]),s._v("(集合)、 "),a("code",[s._v("zset")]),s._v("(sorted set --有序集合)和"),a("code",[s._v("hash")]),s._v("(哈希类型)")]),s._v(" "),a("li",[s._v("这些数据类型都支持push/pop、 add/remove 及取交集并集和差集及更丰富的操作,而且这些操作都是"),a("code",[s._v("原子性")]),s._v("的")]),s._v(" "),a("li",[s._v("在此基础上， Redis支持各种不同方式的"),a("code",[s._v("排序")])]),s._v(" "),a("li",[s._v("与memcached一样，为了保证效率，数据都是"),a("code",[s._v("缓存在内存")]),s._v("中")]),s._v(" "),a("li",[s._v("区别的是Redis会"),a("code",[s._v("周期性")]),s._v("的把更新的"),a("code",[s._v("数据写入磁盘")]),s._v("或者把修改操作写入追加的记录文件")]),s._v(" "),a("li",[s._v("并且在此基础上实现了"),a("code",[s._v("master-slave（主从）")]),s._v("同步")])]),s._v(" "),a("blockquote",[a("p",[s._v("Redis")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6882984260672847879",target:"_blank",rel:"noopener noreferrer"}},[s._v("文档"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("==单线程+多路IO复用==")]),s._v(" "),a("p",[s._v("简单理解就是：一个服务端进程可以同时处理多个套接字描述符。\n多路：多个客户端连接（连接就是套接字描述符）\n复用：使用单进程就能够实现同时处理多个客户端的连接\n以上是通过增加进程和线程的数量来并发处理多个套接字，免不了上下文切换的开销，而 IO 多路复用只需要一个进程就能够处理多个套接字，从而解决了上下文切换的问题。\n其发展可以分 select->poll→epoll 三个阶段来描述。")]),s._v(" "),a("blockquote",[a("p",[s._v("五大数据类型")])]),s._v(" "),a("ol",[a("li",[s._v("字符串(String)")]),s._v(" "),a("li",[s._v("列表(List)")]),s._v(" "),a("li",[s._v("集合(Set)")]),s._v(" "),a("li",[s._v("哈希(Hash)")]),s._v(" "),a("li",[s._v("有序集合(Zset)")])]),s._v(" "),a("h2",{attrs:{id:"命令操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令操作"}},[s._v("#")]),s._v(" 命令操作")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis自带的客户端")]),s._v("\nredis-cli\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果有给redis设置密码，需要先验证一下才能操作redis")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1:637"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("9")]),s._v(">")]),s._v(" auth root\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"键key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#键key"}},[s._v("#")]),s._v(" 键key")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("keys * "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看数据库中所有的key")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608195351415.png",alt:"image-20210608195351415"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("exists "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看key是否存在，返回值为key的数量")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608195510061.png",alt:"image-20210608195510061"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("type")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看key是什么类型")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608195614578.png",alt:"image-20210608195614578"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("del "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除key，返回删除个数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608195742144.png",alt:"image-20210608195742144"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("unlink "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据value选择非阻塞删除，先通知删除该key，后续在删除内存中的key，异步执行")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("expire "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置key的过期时间，单位秒")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608200044843.png",alt:"image-20210608200044843"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("ttl "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看key过期时间，-1表示永不过期，-2表示已经过期")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608200218937.png",alt:"image-20210608200218937"}})]),s._v(" "),a("h3",{attrs:{id:"库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#库"}},[s._v("#")]),s._v(" 库")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("库序号"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换库，redis有16个库，默认是0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608200422509.png",alt:"image-20210608200422509"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("dbsize "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查看当前数据库key的数量，返回个数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608200538584.png",alt:"image-20210608200538584"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("flushdb "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#清除当前库")]),s._v("\nflushall "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#清除全部库")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608200724046.png",alt:"image-20210608200724046"}})]),s._v(" "),a("h3",{attrs:{id:"string-字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串"}},[s._v("#")]),s._v(" String(字符串)")]),s._v(" "),a("p",[s._v("String类型是("),a("code",[s._v("二进制安全的")]),s._v(")，可以包含任何数据")]),s._v(" "),a("p",[s._v("Srting类型是Redis最基本的数据类型，一个Redis中字符串的value最多可以是"),a("code",[s._v("512M")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置一个key，value")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608201205040.png",alt:"image-20210608201205040"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("get "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#根据key获取value")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608201144079.png",alt:"image-20210608201144079"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("append "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#在对应key的value后面追加数据，返回总长度")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608201438649.png",alt:"image-20210608201438649"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("strlen "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取值的长度")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("setnx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置值，当键存在时不进行设置，键不存在才进行设置")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608201640465.png",alt:"image-20210608201640465"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("incr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将key中存储的值+1，返回增加后的值，只能对数字值进行操作，如果为空，新增值为1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608201951902.png",alt:"image-20210608201951902"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("decr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将key中存储的值-1，返回减少后的值，只能对数字值进行操作，如果为空，新增值为-1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608202009173.png",alt:"image-20210608202009173"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("incrby/decrby "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("步长"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将key中的值进行增减，长度为步长")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608202320342.png",alt:"image-20210608202320342"}})]),s._v(" "),a("p",[a("code",[s._v("增减操作都是原子性操作：")]),s._v("Redis而言，命令的原子性指的是：一个操作的不可以再分，操作要么执行，要么不执行。")]),s._v(" "),a("p",[s._v("Redis的操作之所以是原子性的，是因为Redis是单线程的。")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#同时对多对k-v进行赋值")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("mget "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#同时获取多个value")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608205325643.png",alt:"image-20210608205325643"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("msetnx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#同时设置多对值，当值存在时不进行设置，值不存在才进行设置")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608205433667.png",alt:"image-20210608205433667"}})]),s._v(" "),a("p",[s._v("msetnx同时设置多对值时，"),a("code",[s._v("原子性操作，要么都成功要么都不成功")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#获取值的范围，类似Java中的substring，前后都为闭区间")]),s._v("\ngetrange "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("起始位置"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("结束位置"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608204654354.png",alt:"image-20210608204654354"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#根据起始位置，将key中的值覆盖为value")]),s._v("\nsetrange "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("起始位置"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608204850347.png",alt:"image-20210608204850347"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("setex "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("过期时间"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置k-v的同时设置过期时间，单位s")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608205041973.png",alt:"image-20210608205041973"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("getset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#设置新值的同时，获取旧值")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608205208369.png",alt:"image-20210608205208369"}})]),s._v(" "),a("p",[s._v("String的底层结构为简单的动态字符串，内部结构类似与Java的ArrayList，才用预分配冗余空间的方式，来减少内存的频繁操作")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608205748834.png",alt:"image-20210608205748834"}})]),s._v(" "),a("p",[s._v("内部为当前字符串实际分配的空间capacity一般要高于实际字符串长度len。当字符串长度小于1M时,扩容都是加倍现有的空间，如果超过1M，扩容时一次只会多扩1M的空间，需要注意的是字符串最大长度为512M")]),s._v(" "),a("h3",{attrs:{id:"hash-哈希"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash-哈希"}},[s._v("#")]),s._v(" Hash(哈希)")]),s._v(" "),a("p",[s._v("hash是一个键值对集合")]),s._v(" "),a("p",[s._v("hash是一个string类型的field和value的映射表，hash特别适用于存储对象，类似Java的Map<string, object>")]),s._v(" "),a("p",[s._v("用户ID为查找的key，存储的value用户对象包含姓名，年龄，生日等信息，如果用普通的key/value结构来存储")]),s._v(" "),a("p",[s._v("主要有以下两种存储方式：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609083637032.png",alt:"image-20210609083637032"}})]),s._v(" "),a("ol",[a("li",[s._v("将对象系列化，存储序列化过后的对象，每次修改对象需要先反序列化，修改完数据后在序列化回去")]),s._v(" "),a("li",[s._v("普通键值对，键是用户id+属性标签，值是属性值，id数据冗余")])]),s._v(" "),a("p",[s._v("第三种方式：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609084123574.png",alt:"image-20210609084123574"}})]),s._v(" "),a("p",[a("code",[s._v("user为key，属性标签跟属性值是value")]),s._v("，存储方便，值的操作方便")]),s._v(" "),a("blockquote",[a("p",[s._v("命令")])]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("filed value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#<key>是hash的键，<filed>是value的键,<value>是值，可以批量设置，如果hash的key不存在则创建新的hash，如果key存在则创建失败")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609090246702.png",alt:"image-20210609090246702"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hget "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#根据filed获取value")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609085303174.png",alt:"image-20210609085303174"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hmset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("filed value "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#可以批量设置hash，如果key存在，filed相同则覆盖对应的value，否则创建一个新的hash")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609090153249.png",alt:"image-20210609090153249"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hmget "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("filed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#批量获取value，如果filed不存在返回nil，存在返回对应的value")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609090601964.png",alt:"image-20210609090601964"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hexists "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("filed"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#判断对应的key是否存在filed")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609090842631.png",alt:"image-20210609090842631"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hkeys "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询对应的key的所有filed")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609091359018.png",alt:"image-20210609091359018"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hvals "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#查询对应key的所有value")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609091406370.png",alt:"image-20210609091406370"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hincrby "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("increment"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为hash的key中的field的值增加或减少increment")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609091540299.png",alt:"image-20210609091540299"}})]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("hsetnx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("field"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#为对应key添加filed和value，只有filed不存在时才会成功")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210609091830402.png",alt:"image-20210609091830402"}})]),s._v(" "),a("p",[s._v("Hash类型对应的数据结构有两种：ziplist(压缩列表)，hashtable(哈希表)。当field-value长度较短且个数较少时，使用ziphash，否则使用hashtable")]),s._v(" "),a("h3",{attrs:{id:"list-列表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-列表"}},[s._v("#")]),s._v(" List(列表)")]),s._v(" "),a("p",[s._v("单键多值")]),s._v(" "),a("p",[s._v("redis列表是简单的字符串列表，按照插入顺序排序，可以插入一个元素到列表的头部(左边)或者尾部(右边)")]),s._v(" "),a("p",[s._v("列表类型内部使用"),a("code",[s._v("双向链表")]),s._v("实现的，所以向列表两端添加元素的时间复杂度为O(1)，获取越接近两端的元素速度越快。但是使用链表的代价是通过索引访问元素比较慢。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://www.coderdu.tech/image/image-20210608210412685.png",alt:"image-20210608210412685"}})]),s._v(" "),a("blockquote",[a("p",[s._v("命令")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("命令")]),s._v(" "),a("th",[s._v("用法")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("lpush")]),s._v(" "),a("td",[s._v("lpush key value [value ...]")]),s._v(" "),a("td",[s._v("（1）将一个或多个值插入到列表key的表头； （2）如果有多个value值，则从左到右的顺序依次插入表头； （3）如果key不存在，则会创建一个空列表，然后执行lpush操作；如果key存在，但不是列表类型，则返回错误。")])]),s._v(" "),a("tr",[a("td",[s._v("lpushx")]),s._v(" "),a("td",[s._v("lpushx key value")]),s._v(" "),a("td",[s._v("（1）将value值插入到列表key的表头，当且仅当key存在且是一个列表； （2）如果key不存在时，lpushx命令什么都不会做。")])]),s._v(" "),a("tr",[a("td",[s._v("lpop")]),s._v(" "),a("td",[s._v("lpop key")]),s._v(" "),a("td",[s._v("（1）移除并返回列表key的头元素。")])]),s._v(" "),a("tr",[a("td",[s._v("lrange")]),s._v(" "),a("td",[s._v("lrange key start stop")]),s._v(" "),a("td",[s._v("（1）返回列表key中指定区间内的元素； （2）start大于列表最大下标是，返回空列表； （3）可使用负数下标，-1表示列表最后一个元素，以此类推。")])]),s._v(" "),a("tr",[a("td",[s._v("lrem")]),s._v(" "),a("td",[s._v("lrem key count value")]),s._v(" "),a("td",[s._v("（1）count>0表示从头到尾搜索，移除与value相等的元素，数量为count； （2）count<0表示从尾到头搜索，移除与value相等的元素，数量为count； （3）count=0表示移除列表中所有与value相等的元素。")])]),s._v(" "),a("tr",[a("td",[s._v("lset")]),s._v(" "),a("td",[s._v("lset key index value")]),s._v(" "),a("td",[s._v("（1）将列表key下标为index的元素值设置为value； （2）当index参数超出范围，或对一个空列表进行lset操作时，返回错误。")])]),s._v(" "),a("tr",[a("td",[s._v("lindex")]),s._v(" "),a("td",[s._v("lindex key index")]),s._v(" "),a("td",[s._v("（1）返回列表key中下标为index的元素。")])]),s._v(" "),a("tr",[a("td",[s._v("linsert")]),s._v(" "),a("td",[s._v("linsert key BEFORE|AFTER pivot value")]),s._v(" "),a("td",[s._v("（1）将值value插入列表key中，位于pivot前面或者后面； （2）当pivot不存在列表key中，或者key不存在时，不执行任何操作。")])]),s._v(" "),a("tr",[a("td",[s._v("llen")]),s._v(" "),a("td",[s._v("len key")]),s._v(" "),a("td",[s._v("（1）返回列表key的长度，当key不存在时，返回0。")])]),s._v(" "),a("tr",[a("td",[s._v("rpop")]),s._v(" "),a("td",[s._v("rpop key")]),s._v(" "),a("td",[s._v("（1）移除并返回列表key的尾元素。")])]),s._v(" "),a("tr",[a("td",[s._v("rpoplpush")]),s._v(" "),a("td",[s._v("rpoplpush source destination")]),s._v(" "),a("td",[s._v("（1）将列表source中最后一个元素弹出并返回给客户端，并且将该元素插入到列表destincation的头部。")])]),s._v(" "),a("tr",[a("td",[s._v("rpush")]),s._v(" "),a("td",[s._v("rpush key value [value ...]")]),s._v(" "),a("td",[s._v("（1）将一个或多个值插入到列表key的尾部。")])]),s._v(" "),a("tr",[a("td",[s._v("rpushx")]),s._v(" "),a("td",[s._v("rpushx key value")]),s._v(" "),a("td",[s._v("（1）将value值插入到列表key的表尾，当且仅当key存在且是一个列表； （2）如果key不存在时，lpushx命令什么都不会做。")])])])]),s._v(" "),a("p",[s._v("==总结：==")]),s._v(" "),a("ol",[a("li",[s._v("它是一个字符串链表，left 和 right 都可以插入、添加")]),s._v(" "),a("li",[s._v("如果键不存在，创建新的链表")]),s._v(" "),a("li",[s._v("如果键已存在，新增内容")]),s._v(" "),a("li",[s._v("如果值全移除，对应的键也就消失了")]),s._v(" "),a("li",[s._v("链表的操作无论是头和尾效率都极高，但假如是对中间元素进行操作，效率就很惨淡了")])]),s._v(" "),a("h3",{attrs:{id:"set-集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-集合"}},[s._v("#")]),s._v(" Set(集合)")]),s._v(" "),a("p",[s._v("Redis中的set类型是string类型的"),a("code",[s._v("无序集合")]),s._v("。集合类型的常用操作是向集合中加入或删除元素、判断某个元素是否存在等，由于集合类型在Redis内部是使用值为空的散列表实现的，所以这些操作的时间复杂度都是O(1)。最方便的是多个集合类型键之间还可以进行并集、交集和差集运算。")]),s._v(" "),a("blockquote",[a("p",[s._v("命令")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("命令")]),s._v(" "),a("th",[s._v("用法")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("sadd")]),s._v(" "),a("td",[s._v("sadd key member [member ...]")]),s._v(" "),a("td",[s._v("（1）将一个或多个member元素加入key中，已存在在集合中的member将被忽略； （2）如果key不存在，则创建一个只包含member元素的集合； （3）当key不是集合类型时，将返回一个错误。")])]),s._v(" "),a("tr",[a("td",[s._v("scard")]),s._v(" "),a("td",[s._v("scard key")]),s._v(" "),a("td",[s._v("（1）返回key对应的集合中的元素数量。")])]),s._v(" "),a("tr",[a("td",[s._v("sdiff")]),s._v(" "),a("td",[s._v("sdiff key [key ...]")]),s._v(" "),a("td",[s._v("（1）返回所有key对应的集合的差集。")])]),s._v(" "),a("tr",[a("td",[s._v("sdiffstore")]),s._v(" "),a("td",[s._v("sdiffstore destionation key [key ...]")]),s._v(" "),a("td",[s._v("（1）返回所有key对应的集合的差集，并把该差集赋值给destionation； （2）如果destionation已经存在，则直接覆盖。")])]),s._v(" "),a("tr",[a("td",[s._v("sinter")]),s._v(" "),a("td",[s._v("sinter key [key ...]")]),s._v(" "),a("td",[s._v("（1）返回所有key对应的集合的交集； （2）不存在的key被视为空集。")])]),s._v(" "),a("tr",[a("td",[s._v("sinterstore")]),s._v(" "),a("td",[s._v("sinter destionation key [key ...]")]),s._v(" "),a("td",[s._v("（1）返回所有key对应的集合的交集，并把该交集赋值给destionation； （2）如果destionation已经存在，则直接覆盖。")])]),s._v(" "),a("tr",[a("td",[s._v("sismember")]),s._v(" "),a("td",[s._v("sismember key member")]),s._v(" "),a("td",[s._v("（1）判断member元素是否是key的成员，0表示不是，1表示是。")])]),s._v(" "),a("tr",[a("td",[s._v("smembers")]),s._v(" "),a("td",[s._v("smember key")]),s._v(" "),a("td",[s._v("（1）返回集合key中的所有成员； （2）不存在的key被视为空集。")])]),s._v(" "),a("tr",[a("td",[s._v("srem")]),s._v(" "),a("td",[s._v("srem key member [member ...]")]),s._v(" "),a("td",[s._v("（1）移除集合key中的一个或多个member元素，不存在的member将被忽略。")])]),s._v(" "),a("tr",[a("td",[s._v("sunion")]),s._v(" "),a("td",[s._v("sunion key [key ...]")]),s._v(" "),a("td",[s._v("（1）返回所有key对应的集合的并集； （2）不存在的key被视为空集。")])]),s._v(" "),a("tr",[a("td",[s._v("sunionstore")]),s._v(" "),a("td",[s._v("sunionstore destionation key [key ...]")]),s._v(" "),a("td",[s._v("（1）返回所有key对应的集合的并集，并把该并集赋值给destionation； （2）如果destionation已经存在，则直接覆盖。")])])])]),s._v(" "),a("h3",{attrs:{id:"zset-sorted-set有序集合"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zset-sorted-set有序集合"}},[s._v("#")]),s._v(" Zset(sorted set有序集合)")]),s._v(" "),a("p",[s._v("zset类型也是string类型元素的集合，但是它是"),a("code",[s._v("有序")]),s._v("的。")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("命令")]),s._v(" "),a("th",[s._v("用法")]),s._v(" "),a("th",[s._v("描述")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("zadd")]),s._v(" "),a("td",[s._v("zadd key score member [score member ...]")]),s._v(" "),a("td",[s._v("（1）将一个或多个member元素及其score值加入集合key中； （2）如果member已经是有序集合的元素，那么更新member对应的score并重新插入member保证member在正确的位置上； （3）score可以是整数也可以是双精度浮点数。")])]),s._v(" "),a("tr",[a("td",[s._v("zcard")]),s._v(" "),a("td",[s._v("zcard key")]),s._v(" "),a("td",[s._v("（1）返回有序集的元素个数。")])]),s._v(" "),a("tr",[a("td",[s._v("zcount")]),s._v(" "),a("td",[s._v("zcount key min max")]),s._v(" "),a("td",[s._v("（1）返回有序集key中，score值>=min且<=max的成员数量")])]),s._v(" "),a("tr",[a("td",[s._v("zrange")]),s._v(" "),a("td",[s._v("zrange key start stop [withscores]")]),s._v(" "),a("td",[s._v("（1）返回有序集key中指定区间内的成员，成员位置按score从小到大排序； （2）如果score值相同，则按字典排序； （3）如果要使成员按score从大到小排序，则使用zrevrange命令。")])]),s._v(" "),a("tr",[a("td",[s._v("zrank")]),s._v(" "),a("td",[s._v("zrank key number")]),s._v(" "),a("td",[s._v("（1）返回有序集key中成员member的排名，有序集合按score值从小到大排列； （2）zrevrank命令将按照score值从大到小排序。")])]),s._v(" "),a("tr",[a("td",[s._v("zrem")]),s._v(" "),a("td",[s._v("zrem key member [member ...]")]),s._v(" "),a("td",[s._v("（1）移除有序集key中的一个或多个元素，不存在的元素将被忽略； （2）当key存在但不是有序集时，返回错误。")])]),s._v(" "),a("tr",[a("td",[s._v("zremrangebyrank")]),s._v(" "),a("td",[s._v("zremrangerank key start stop")]),s._v(" "),a("td",[s._v("（1）移除有序集key中指定排名区间内的所有元素。")])]),s._v(" "),a("tr",[a("td",[s._v("zremrangebyscore")]),s._v(" "),a("td",[s._v("zremrangescore key min max")]),s._v(" "),a("td",[s._v("（1）移除有序集key中所有score值>=min且<=max之间的元素。")])])])])])}),[],!1,null,null,null);e.default=r.exports}}]);