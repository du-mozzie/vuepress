(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{598:function(t,e,r){"use strict";r.r(e);var n=r(5),_=Object(n.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("==栈是限定仅在表尾进行插入和删除的线性表==")]),t._v(" "),r("p",[t._v("允许插入和删除的一端称为栈顶，另一端称为栈底，不含任何数据元素的栈称为空栈。")]),t._v(" "),r("p",[t._v("后进先出LIFO")]),t._v(" "),r("blockquote",[r("p",[t._v("栈的插入操作，叫作进栈，也称压栈、入栈。")]),t._v(" "),r("p",[t._v("栈的删除操作，叫作出栈，有的也叫作弹栈。")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://www.itdu.tech/image/image-20210419215326952.png",alt:"image-20210419215326952"}})]),t._v(" "),r("p",[r("strong",[t._v("逆波兰，使用栈结构来帮助计算机处理数学加减乘除计算问题")])]),t._v(" "),r("p",[t._v("​\t把生活中数学中缀表示法改成后缀表示法")]),t._v(" "),r("p",[t._v("​\t逆波兰记法中，操作符置于操作数的后面。例如表达“三加四”时，写作“3 4 + ”，而不是“3 + 4”。如果有多个操作符，操作符置于第二个操作数的后面，所以常规中缀记法的“3 - 4 + 5”在逆波兰记法中写作“3 4 - 5 + ”：先3减去4，再加上5。使用逆波兰记法的一个好处是不需要使用括号。例如中缀记法中“3 - 4 * 5”与“（3 - 4）*5”不相同，但后缀记法中前者写做“3 4 5 * - ”，无歧义地表示“3 (4 5 *) -”；后者写做“3 4 - 5 * ”。")]),t._v(" "),r("p",[t._v("逆波兰表达式的"),r("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E8%A7%A3%E9%87%8A%E5%99%A8",target:"_blank",rel:"noopener noreferrer"}},[t._v("解释器"),r("OutboundLink")],1),t._v("一般是基于"),r("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E5%A0%86%E6%A0%88",target:"_blank",rel:"noopener noreferrer"}},[t._v("堆栈"),r("OutboundLink")],1),t._v("的。解释过程一般是：操作数入栈；遇到操作符时，操作数出栈，求值，将结果入栈；当一遍后，栈顶就是表达式的值。因此逆波兰表达式的求值使用堆栈结构很容易实现，并且能很快求值。")])])}),[],!1,null,null,null);e.default=_.exports}}]);