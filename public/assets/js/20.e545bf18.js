(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{584:function(t,s,a){"use strict";a.r(s);var e=a(5),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[a("strong",[t._v("双指针")]),t._v("，指的是在遍历对象的过程中，不是普通的使用单个指针进行访问，而是使用两个相同方向（"),a("em",[t._v("快慢指针")]),t._v("）或者相反方向（"),a("em",[t._v("对撞指针")]),t._v("）的指针进行扫描，从而达到相应的目的。")]),t._v(" "),a("h4",{attrs:{id:"对撞指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对撞指针"}},[t._v("#")]),t._v(" 对撞指针")]),t._v(" "),a("p",[a("strong",[t._v("对撞指针")]),t._v("是指在有序数组中，将指向最左侧的索引定义为"),a("code",[t._v("左指针(left)")]),t._v("，最右侧的定义为"),a("code",[t._v("右指针(right)")]),t._v("，然后从两头向中间进行数组遍历。")]),t._v(" "),a("blockquote",[a("p",[t._v("对撞数组适用于"),a("strong",[t._v("有序数组")]),t._v("，也就是说当你遇到题目给定有序数组时，应该第一时间想到用对撞指针解题。")])]),t._v(" "),a("p",[t._v("伪代码")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" right "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//遍历数组")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("left "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" right"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    left"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一些条件判断 和处理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n    right"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/boats-to-save-people/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 881 救生艇"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"快慢指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快慢指针"}},[t._v("#")]),t._v(" 快慢指针")]),t._v(" "),a("p",[a("strong",[t._v("快慢指针")]),t._v("也是双指针，但是两个指针从同一侧开始遍历数组，将这两个指针分别定义为"),a("code",[t._v("快指针（fast）")]),t._v("和"),a("code",[t._v("慢指针（slow）")]),t._v("，两个指针以不同的策略移动，直到两个指针的值相等（或其他特殊条件）为止，如fast每次增长两个，slow每次增长一个。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//leetcode-cn.com/problems/remove-duplicates-from-sorted-array/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 26 删除排序数组中的重复项"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://link.zhihu.com/?target=https%3A//leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("LeetCode 141.环形链表"),a("OutboundLink")],1)]),t._v(" "),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("p",[t._v("当遇到有序数组时，应该优先想到"),a("code",[t._v("双指针")]),t._v("来解决问题，因两个指针的同时遍历会减少空间复杂度和时间复杂度。")])])}),[],!1,null,null,null);s.default=n.exports}}]);