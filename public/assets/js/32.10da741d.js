(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{596:function(v,_,t){"use strict";t.r(_);var o=t(5),l=Object(o.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("p",[v._v("由零个或多个字符串组成的有限序列")]),v._v(" "),t("blockquote",[t("p",[v._v("回文")])]),v._v(" "),t("p",[v._v("正序、逆序，串是一样的")]),v._v(" "),t("blockquote",[t("p",[v._v("串的比较")])]),v._v(" "),t("p",[v._v("根据ASCII或者Unicode编码逐个比较字符串的字符比较排序大小")]),v._v(" "),t("blockquote",[t("p",[v._v("存储结构")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("顺序存储结构")]),v._v(" "),t("p",[v._v("用一组地址连续的存储单元赖存储串中的字符序列")])]),v._v(" "),t("li",[t("p",[v._v("链式存储结构")]),v._v(" "),t("p",[v._v("使用链表来存储串")])])]),v._v(" "),t("blockquote",[t("p",[v._v("模式匹配算法")])]),v._v(" "),t("ol",[t("li",[t("p",[v._v("朴素的模式匹配算法")]),v._v(" "),t("p",[v._v("逐个遍历元素匹配")])]),v._v(" "),t("li",[t("p",[v._v("[KMP模式匹配算法](")])])])])}),[],!1,null,null,null);_.default=l.exports}}]);