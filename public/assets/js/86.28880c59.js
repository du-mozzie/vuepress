(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{653:function(v,_,t){"use strict";t.r(_);var l=t(5),p=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"高并发"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高并发"}},[v._v("#")]),v._v(" 高并发")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("服务单一职责+独立部署")]),v._v(" "),t("p",[v._v("秒杀服务即使自己扛不住压力，挂掉，不要影响其他服务")])]),v._v(" "),t("li",[t("p",[v._v("秒杀链接加密")]),v._v(" "),t("p",[v._v("防止恶意攻击，模拟秒杀请求，1000次/s攻击")]),v._v(" "),t("p",[v._v("防止链接暴露，自己工作人员，提前秒杀商品")])]),v._v(" "),t("li",[t("p",[v._v("库存预热+快速扣减")]),v._v(" "),t("p",[v._v("秒杀读多写少。无需每次实时校验库存。我们库存预热，放到redis中。信号量控制进来秒杀的请求")])]),v._v(" "),t("li",[t("p",[v._v("动静分离")]),v._v(" "),t("p",[v._v("nginx做好动静分离。保证秒杀和商品详情页的动态请求才打到后端的服务集群。")]),v._v(" "),t("p",[v._v("使用CDN网络，分担本集群压力")])]),v._v(" "),t("li",[t("p",[v._v("恶意请求拦截")]),v._v(" "),t("p",[v._v("识别非法攻击请求进行拦截，网关层")])]),v._v(" "),t("li",[t("p",[v._v("流量错峰")]),v._v(" "),t("p",[v._v("使用各种手段，讲流量分担到更大宽度的时间点。比如验证码，加入购物车")])]),v._v(" "),t("li",[t("p",[v._v("限流&熔断&降级")]),v._v(" "),t("p",[v._v("前端限流+后端限流")]),v._v(" "),t("p",[v._v("限制次数，限制总量，快速失败降级运行，熔断隔离防止雪崩")])]),v._v(" "),t("li",[t("p",[v._v("队列削峰")]),v._v(" "),t("p",[v._v("1万个商品，每个1000件秒杀。双11所有秒杀成功的请求，进入队列，慢慢创建订单，扣减库存即可")])])]),v._v(" "),t("p",[v._v("==高并发三大处理手段==")]),v._v(" "),t("ul",[t("li",[v._v("缓存（Redis）")]),v._v(" "),t("li",[v._v("异步（ThreadPoolExecutor, CompletableFuture）")]),v._v(" "),t("li",[v._v("队排好（RabbitMQ）")])])])}),[],!1,null,null,null);_.default=p.exports}}]);